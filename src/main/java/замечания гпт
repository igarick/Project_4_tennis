‚ö†Ô∏è –ó–∞–º–µ—á–∞–Ω–∏—è –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é
1Ô∏è‚É£ –õ–æ–≥–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: isDeuce
private boolean isDeuce(PointScoreEnum playerScore, PointScoreEnum opponentScore) {
    return (playerScore == ADVANTAGE && opponentScore == ADVANTAGE);
}


üß† –ß—Ç–æ –Ω–µ —Ç–∞–∫:
–í —Ç–µ–Ω–Ω–∏—Å–µ deuce ‚Äî —ç—Ç–æ –∫–æ–≥–¥–∞ –æ–±–∞ –Ω–∞ 40, –Ω–µ –Ω–∞ ADVANTAGE.
ADVANTAGE –±—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ —É –æ–¥–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞.

‚úÖ –ò—Å–ø—Ä–∞–≤—å:

private boolean isDeuce(PointScoreEnum playerScore, PointScoreEnum opponentScore) {
    return (playerScore == FORTY && opponentScore == FORTY);
}

2Ô∏è‚É£ –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞: isPointVictory
return ((playerScore == PointScoreEnum.ADVANTAGE && opponentScore != FORTY) ||
        (playerScore == PointScoreEnum.WIN && opponentScore == FORTY));


üß† –≠—Ç–æ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å, –Ω–æ –≤ —Ç–µ–Ω–Ω–∏—Å–µ:

–µ—Å–ª–∏ –∏–≥—Ä–æ–∫ –Ω–∞ AD –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç –æ—á–∫–æ ‚Üí –≥–µ–π–º –≤—ã–∏–≥—Ä–∞–Ω (–≤–µ—Ä–Ω–æ),

–µ—Å–ª–∏ –æ–±–∞ –±—ã–ª–∏ –Ω–∞ 40, –∏ –æ–¥–∏–Ω –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç –æ—á–∫–æ ‚Üí –æ–Ω –ø–æ–ª—É—á–∞–µ—Ç AD, –∞ –Ω–µ –≥–µ–π–º.

‚úÖ –õ—É—á—à–µ —Ä–∞–∑–¥–µ–ª–∏—Ç—å —ç—Ç–∏ —Å–ª—É—á–∞–∏:

if (playerScore == FORTY && opponentScore == FORTY) {
    playerScore = ADVANTAGE;
    return false; // –∏–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è
}
if (playerScore == ADVANTAGE) {
    return true; // –≤—ã–∏–≥—Ä–∞–ª –≥–µ–π–º
}
return false;

3Ô∏è‚É£ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è isTieBreakGlobal
private static boolean isTieBreakGlobal;


‚ö†Ô∏è –≠—Ç–æ –∞–Ω—Ç–∏–ø–∞—Ç—Ç–µ—Ä–Ω –≤ —Å–µ—Ä–≤–∏—Å–∞—Ö.
–¢—ã –¥–µ—Ä–∂–∏—à—å –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–º –ø–æ–ª–µ, –Ω–æ —É —Ç–µ–±—è –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∞—Ç—á–µ–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ ‚Äî –≤—Å–µ –æ–Ω–∏ –±—É–¥—É—Ç –¥–µ–ª–∏—Ç—å —ç—Ç–æ—Ç —Ñ–ª–∞–≥ üò¨

‚úÖ –†–µ—à–µ–Ω–∏–µ:

–°–¥–µ–ª–∞–π isTieBreak –ª–æ–∫–∞–ª—å–Ω—ã–º –≤–Ω—É—Ç—Ä–∏ MatchScoreModel.

–ò–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–π boolean –∏–∑ –º–µ—Ç–æ–¥–∞ updateScore –∏ —Å–æ—Ö—Ä–∞–Ω—è–π –µ–≥–æ –≤ –æ–±—ä–µ–∫—Ç –º–∞—Ç—á–∞.

–ü—Ä–∏–º–µ—Ä:

public boolean updateScore(String playerIdParam, MatchScoreModel currentMatch) {
    ...
    return isTieBreak(playerScore, opponentScore);
}

4Ô∏è‚É£ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ –≤ updateScore
if (playerId.equals(firstPlayerId)) {
   ...
}
if (playerId.equals(secondPlayerId)) {
   ...
}


–¢—ã –¥–µ–ª–∞–µ—à—å –ø–æ—á—Ç–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏. –õ—É—á—à–µ:

–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫—Ç–æ —Ç–µ–∫—É—â–∏–π –∏–≥—Ä–æ–∫, –∫—Ç–æ —Å–æ–ø–µ—Ä–Ω–∏–∫;

–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã–∑—ã–≤–∞—Ç—å –æ–±—â–∏–µ –º–µ—Ç–æ–¥—ã.

‚úÖ –ü—Ä–∏–º–µ—Ä:

Score playerScore = playerId.equals(firstPlayerId)
        ? currentMatch.getFirstPlayerScore()
        : currentMatch.getSecondPlayerScore();
Score opponentScore = playerId.equals(firstPlayerId)
        ? currentMatch.getSecondPlayerScore()
        : currentMatch.getFirstPlayerScore();

addPoint(playerScore, opponentScore);
update(playerScore, opponentScore, currentMatch);

5Ô∏è‚É£ –õ–∏—à–Ω–∏–π –≤—ã–∑–æ–≤ addTieBreakPoint

–í addPoint() —Ç—ã –¥–µ–ª–∞–µ—à—å:

playerScore.setTieBreakPoints(updatedTieBreakPoints);
addTieBreakPoint(playerScore);


–∞ –≤ addTieBreakPoint() ‚Äî —Å–Ω–æ–≤–∞ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—à—å –æ—á–∫–æ.
üìâ –í –∏—Ç–æ–≥–µ —Å—á—ë—Ç —Ç–∏–∫–∞–µ—Ç –ø–æ +2.

‚úÖ –£–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –≤—ã–∑–æ–≤–æ–≤.

6Ô∏è‚É£ –ü–æ–±–µ–¥–∞ –≤ —Å–µ—Ç–µ (isSetVictory)
return ((playerScoreSets == 2 && (playerScoreSets - opponentScoreSets == 2)) ||
        (playerScoreSets == 2 && (playerScoreSets - opponentScoreSets == 1)));


–≠—Ç–æ —É—Å–ª–æ–≤–∏–µ –Ω–µ–≤–µ—Ä–Ω–æ–µ ‚Äî —Å–µ—Ç—ã —Å—á–∏—Ç–∞—é—Ç—Å—è –Ω–µ –æ—á–∫–∞–º–∏ –≤ —Å–µ—Ç–µ, –∞ –≤—ã–∏–≥—Ä–∞–Ω–Ω—ã–º–∏ —Å–µ—Ç–∞–º–∏ (–≤ BO3 ‚Äî 2 –ø–æ–±–µ–¥–Ω—ã—Ö —Å–µ—Ç–∞).

–°–∫–æ—Ä–µ–µ —Ç—ã —Ö–æ—Ç–µ–ª –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–µ–π–º –≤–Ω—É—Ç—Ä–∏ —Å–µ—Ç–∞, –Ω–æ –Ω–∞–∑—ã–≤–∞–µ—à—å —ç—Ç–æ ¬´—Å–µ—Ç—ã¬ª.
–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —Å—á–∏—Ç–∞—Ç—å –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—É—é –ø–æ–±–µ–¥—É –≤ –º–∞—Ç—á–µ (–¥–æ 2 —Å–µ—Ç–æ–≤):
‚úÖ

return playerScoreSets == 2; // best of 3

7Ô∏è‚É£ –ú–µ–ª–∫–∏–µ —à—Ç—Ä–∏—Ö–∏ –∫ —Å—Ç–∏–ª—é

–ú–µ—Ç–æ–¥—ã –≤—Ä–æ–¥–µ updateScoreGames, updateScoreSet ‚Äî –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º–∏:

private void increment(Runnable setter, int current) { setter.run(current + 1); }


–ù–æ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ ‚Äî —Ç–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç —á–∏—Ç–∞–±–µ–ª—å–Ω—ã–π.

–ú–µ—Ç–æ–¥ update() –¥–µ–ª–∞–µ—Ç —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ ‚Äî –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç, –∏ –æ–±–Ω—É–ª—è–µ—Ç. –õ—É—á—à–µ —Ä–∞–∑–±–∏—Ç—å:

updatePoint()

updateGame()

updateSet()

checkForWin()